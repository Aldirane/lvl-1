package main

import (
	"fmt"
	"sync"
)

/* Задание 2
Написать программу, которая конкурентно рассчитает значение квадратов чисел
взятых из массива (2,4,6,8,10) и выведет их квадраты в stdout.
*/

/* Решение
Создаем указатель на тип sync.WaitGroup для того чтобы ожидать завершения запущенных go-рутин
в каждой функции go-рутины мы передаем в аргументы функции указатель wg для обновления одной и той же копии
а не создании новой. Передаем значение val как аргумент, чтобы получить текущее значение числа и
произвести операцию возведения в квадрат числа. Если не использовать локальную копию переменной val, а переменную
в области видимости цикла for range, тогда цикл завершится раньше и горутины будут использовать последнее полученное
значение в переменной val, которое равно 100 в массиве s.
*/

func main() {
	s := []int{2, 4, 6, 8, 10}
	wg := new(sync.WaitGroup)
	for _, val := range s {
		wg.Add(1)
		go func(val int, wg *sync.WaitGroup) {
			defer wg.Done()
			fmt.Println(val * val)
		}(val, wg)
	}
	wg.Wait()
}
